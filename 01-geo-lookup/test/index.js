// Generated by CoffeeScript 1.8.0
(function() {
  var assert, genip, geo, octet;

  assert = require('assert');

  geo = require('../lib');

  octet = function() {
    return ~~(Math.random() * 254);
  };

  genip = function() {
    return "" + (octet()) + "." + (octet()) + "." + (octet()) + "." + (octet());
  };

  describe('geo', function() {
    describe('ip2long()', function() {
      return it('IP should be converted to the long format', function() {
        assert.equal(geo.ip2long('87.229.134.24'), 1474659864);
        assert.equal(geo.ip2long('217.212.248.160'), 3654613152);
        return assert.equal(geo.ip2long('188.65.186.96'), 3158424160);
      });
    });
    return describe('lookup()', function() {
      before(function() {
        return geo.load();
      });
      it('should find country', function() {
        var result;
        result = geo.lookup('87.229.134.24');
        assert.equal(result.country, 'RU');
        result = geo.lookup('2.20.4.0');
        return assert.equal(result.country, 'IT');
      });
      it('should return null for unknown IP', function() {
        var result;
        result = geo.lookup('1.1.1.1');
        return assert.equal(result, null);
      });
      return it('should be freaking fast', function() {
        var diff, i, msec, start, _i;
        start = process.hrtime();
        for (i = _i = 1; _i <= 10000; i = ++_i) {
          geo.lookup(genip());
        }
        diff = process.hrtime(start);
        msec = Math.round((diff[0] * 1e9 + diff[1]) / 1e6);
        return assert(msec < 500, "It is damn too slow: " + msec + "ms for 10k lookups");
      });
    });
  });

}).call(this);
